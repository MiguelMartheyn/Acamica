{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\migue\\\\hello-react\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { contadores } from \"./const\";\nimport \"./styles.scss\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: contadores,\n      valor: 1\n    };\n\n    this.handleIncrement = contador => {\n      const value = this.state.value.map(currentCounter => {\n        if (currentCounter.name === contador.name) {\n          return { ...currentCounter,\n            count: currentCounter.count + this.state.valor\n          };\n        }\n\n        return currentCounter;\n      });\n      this.setState({\n        value\n      });\n    };\n\n    this.handleDecrement = contador => {\n      const value = this.state.value.map(currentCounter => {\n        if (currentCounter.name === contador.name) {\n          return { ...currentCounter,\n            count: currentCounter.count - this.state.valor\n          };\n        }\n\n        return currentCounter;\n      });\n      this.setState({\n        value\n      });\n    };\n\n    this.reset = contador => {\n      const value = this.state.value.map(currentCounter => {\n        if (currentCounter.name === contador.name) {\n          return { ...currentCounter,\n            count: 0\n          };\n        }\n\n        return currentCounter;\n      });\n      this.setState({\n        value\n      });\n    };\n\n    this.getTotal = () => {\n      const total = this.state.value.reduce((accumulator, contador) => {\n        return accumulator + contador.count;\n      }, 0);\n      return total;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"counter-ui\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"counters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Conteo total: \", this.getTotal())), this.state.value.map(contador => /*#__PURE__*/React.createElement(Counter, {\n      id: contador.id,\n      key: contador.id,\n      name: contador.name,\n      count: contador.count,\n      handleDecrement: () => this.handleDecrement(contador),\n      handleIncrement: () => this.handleIncrement(contador),\n      reset: () => this.reset(contador),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nfunction Counter(props) {\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"Application\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"counter-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, props.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, props.count), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.handleIncrement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Sumar\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.handleDecrement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Restar\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Resetear\")))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/migue/hello-react/src/App.js"],"names":["React","Component","contadores","App","state","value","valor","handleIncrement","contador","map","currentCounter","name","count","setState","handleDecrement","reset","getTotal","total","reduce","accumulator","render","id","Counter","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { contadores } from \"./const\";\nimport \"./styles.scss\";\n\nclass App extends Component {\n  state = {\n    value: contadores,\n    valor: 1\n  };\n\n  handleIncrement = contador => {\n    const value = this.state.value.map(currentCounter => {\n      if (currentCounter.name === contador.name) {\n        return {\n          ...currentCounter,\n          count: currentCounter.count + this.state.valor\n        };\n      }\n      return currentCounter;\n    });\n    this.setState({ value });\n  };\n\n  handleDecrement = contador => {\n    const value = this.state.value.map(currentCounter => {\n      if (currentCounter.name === contador.name) {\n        return {\n          ...currentCounter,\n          count: currentCounter.count - this.state.valor\n        };\n      }\n      return currentCounter;\n    });\n    this.setState({ value });\n  };\n  reset = contador => {\n    const value = this.state.value.map(currentCounter => {\n      if (currentCounter.name === contador.name) {\n        return {\n          ...currentCounter,\n          count: 0\n        };\n      }\n      return currentCounter;\n    });\n    this.setState({ value });\n  };\n\n  getTotal = () => {\n    const total = this.state.value.reduce((accumulator, contador) => {\n      return accumulator + contador.count;\n    }, 0);\n    return total;\n  };\n\n  render() {\n    return (\n      <div className=\"counter-ui\">\n        <div className=\"counters\">\n          <div className=\"dashboard\">\n            <h2>Conteo total: {this.getTotal()}</h2>\n          </div>\n\n          {this.state.value.map(contador => (\n            <Counter\n              id={contador.id}\n              key={contador.id}\n              name={contador.name}\n              count={contador.count}\n              handleDecrement={() => this.handleDecrement(contador)}\n              handleIncrement={() => this.handleIncrement(contador)}\n              reset={() => this.reset(contador)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Counter(props) {\n  return (\n    <main className=\"Application\">\n      <section>\n        <div className=\"counter\">\n          <p className=\"counter-name\">{props.name}</p>\n          <p className=\"count\">{props.count}</p>\n          <section className=\"controls\">\n            <button onClick={props.handleIncrement}>Sumar</button>\n            <button onClick={props.handleDecrement}>Restar</button>\n            <button onClick={props.reset}>Resetear</button>\n          </section>\n        </div>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}